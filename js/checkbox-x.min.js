/*!
 * @copyright &copy; Kartik Visweswaran, Krajee.com, 2014
 * @version 1.4.0
 *
 * An extended checkbox plugin for bootstrap with three states and additional styles.
 *
 * For more JQuery/Bootstrap plugins and demos visit http://plugins.krajee.com
 * For more Yii related demos visit http://demos.krajee.com
 */!function(e){var t=function(t,n){var r=this;r.$element=e(t);r.disabled=r.$element.attr("disabled")||r.$element.attr("readonly");r.initialValue=r.$element.val();r.init(n)};t.prototype={constructor:t,init:function(t){var n=this,r=n.$element,i=r.is(":checkbox"),s=r.val(),o=t.inline?"cbx-container":"cbx-container cbx-block";n.options=t;if(i&&s!==0&&s!==1){r.attr("checked",false);if(t.threeState){r.prop("indeterminate",true)}}if(i&&t.useNative){r.on("change",function(e){n.change(true,true)});r.removeClass("cbx-loading");return}if(typeof n.$container=="undefined"){n.$container=e(document.createElement("div")).addClass(o).html(n.render());r.before(n.$container);n.$container.append(r);r.hide()}else{n.$container.before(r);n.$container.addClass(o).html(n.render());n.$container.append(r)}r.removeClass("cbx-loading");n.$cbx=n.$container.find(".cbx");r.closest("form").on("reset",function(e){n.reset()});n.$cbx.on("click",function(e){if(!t.enclosedLabel){n.change(true)}});n.$cbx.on("keyup",function(e){e.which==32&&n.change()});if(i&&!t.useNative){r.on("change",function(e){n.change(true)})}else{r.on("click",function(e){n.change(true)})}},change:function(){var e=this,t=e.$element,n=arguments.length&&arguments[0],r=arguments.length&&arguments[1]===true,i;if(e.disabled){return}i=e.calculate();t.val(i);if(!n&&!r){t.trigger("change")}else{e.validateCheckbox(r,i)}if(!r){e.$cbx.html(e.getIndicator())}},calculate:function(){var e=this,t=e.$element,n=parseInt(t.val()),r=e.options.threeState;if(r){return n===1?null:n===0?1:0}else{return n===1?0:1}},validateCheckbox:function(e,t){var n=this,r=n.$element,i=r.is(":checkbox");if(!i){if(!e){r.trigger("change")}return}r.prop("indeterminate",false);r.prop("checked",false);if(t==1){r.prop("checked",true)}else{if(t!==0){r.prop("indeterminate",true)}}},reset:function(){var e=this,t=e.$element;t.val(e.initialValue);e.refresh();t.trigger("checkbox.reset")},refresh:function(t){var n=this;if(arguments.length){n.init(e.extend(n.options,t))}else{n.disabled=n.$element.attr("disabled")||n.$element.attr("readonly");n.init(n.options)}n.initialValue=n.$element.val()},getIndicator:function(){var e=this,t=e.options,n=t.iconUnchecked,r=parseInt(e.$element.val());if(r===1){n=t.iconChecked}else if(r!==0&&e.options.threeState==true){n=t.iconNull}return n},render:function(){var e=this,t=e.getIndicator(),n=e.options.size,r=e.disabled?"":' tabindex="1000"',i="cbx cbx-"+n+(e.disabled?" cbx-disabled":" cbx-active");return'<div class="'+i+'"'+r+">"+t+"</div>"}};e.fn.checkboxX=function(n){var r=Array.apply(null,arguments);r.shift();return this.each(function(){var i=e(this),s=i.data("checkboxX"),o=typeof n==="object"&&n;if(!s){i.data("checkboxX",s=new t(this,e.extend({},e.fn.checkboxX.defaults,o,e(this).data())))}if(typeof n==="string"){s[n].apply(s,r)}})};e.fn.checkboxX.defaults={threeState:true,inline:true,iconChecked:'<i class="glyphicon glyphicon-ok"></i>',iconUnchecked:" ",iconNull:'<i class="glyphicon glyphicon-stop"></i>',size:"md",enclosedLabel:false,useNative:false};e('input[data-toggle="checkbox-x"]').addClass("cbx-loading");e(document).ready(function(){e('input[data-toggle="checkbox-x"]').checkboxX()})}(window.jQuery)